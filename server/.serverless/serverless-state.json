{
  "service": {
    "service": "server-graphql",
    "serviceObject": {
      "name": "server-graphql"
    },
    "provider": {
      "stage": "development",
      "region": "us-east-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "environment": {
        "ENV_NAME": "development",
        "region": "us-east-1"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "GraphqlLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/server-graphql-development-graphql"
            }
          },
          "PlaygroundLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/server-graphql-development-playground"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "development",
                        "server-graphql",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/server-graphql-development-graphql:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/server-graphql-development-playground:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/server-graphql-development-graphql:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/server-graphql-development-playground:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "server-graphql",
                    "development",
                    "us-east-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GraphqlLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/server-graphql/development/1555965018467-2019-04-22T20:30:18.467Z/server-graphql.zip"
              },
              "FunctionName": "server-graphql-development-graphql",
              "Handler": "src/handler.graphqlHandler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "ENV_NAME": "development",
                  "region": "us-east-1",
                  "databaseHost": "server-graphql-development.cjmgmvbaia9s.us-east-1.rds.amazonaws.com",
                  "databaseUser": "root",
                  "databasePassword": "WMesTAilEGRE",
                  "databaseDb": "server-graphql_development"
                }
              }
            },
            "DependsOn": [
              "GraphqlLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "GraphqlLambdaVersionNMuizZPwARYwOn8jZaoDzXgGlLSjYVwRW1U5oH1RFgo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GraphqlLambdaFunction"
              },
              "CodeSha256": "RnKmxkrU+yz4yMibyvuyJ6exXh81pbtkRIxCKkuQ7tM="
            }
          },
          "PlaygroundLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/server-graphql/development/1555965018467-2019-04-22T20:30:18.467Z/server-graphql.zip"
              },
              "FunctionName": "server-graphql-development-playground",
              "Handler": "src/handler.playgroundHandler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "ENV_NAME": "development",
                  "region": "us-east-1"
                }
              }
            },
            "DependsOn": [
              "PlaygroundLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PlaygroundLambdaVersionAWTMx0LkfqShqR2GLnd1Bt3bZFUJVg8llNHeFP97T2g": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PlaygroundLambdaFunction"
              },
              "CodeSha256": "RnKmxkrU+yz4yMibyvuyJ6exXh81pbtkRIxCKkuQ7tM="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "development-server-graphql",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceGraphql": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "graphql",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePlayground": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "playground",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGraphqlOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin == \"*\") #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceGraphql"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGraphqlPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGraphql"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GraphqlLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodPlaygroundGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePlayground"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PlaygroundLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1555964986016": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "development"
            },
            "DependsOn": [
              "ApiGatewayMethodGraphqlOptions",
              "ApiGatewayMethodGraphqlPost",
              "ApiGatewayMethodPlaygroundGet"
            ]
          },
          "GraphqlLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GraphqlLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PlaygroundLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PlaygroundLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Database": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
              "AllocatedStorage": 100,
              "AutoMinorVersionUpgrade": true,
              "AvailabilityZone": "us-east-1a",
              "DBInstanceClass": "db.t3.micro",
              "DBInstanceIdentifier": "server-graphql-development",
              "DBName": "server-graphql_development",
              "Engine": "postgres",
              "EngineVersion": 10.6,
              "MasterUsername": "root",
              "MasterUserPassword": "WMesTAilEGRE",
              "PubliclyAccessible": true
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "GraphqlLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GraphqlLambdaVersionNMuizZPwARYwOn8jZaoDzXgGlLSjYVwRW1U5oH1RFgo"
            }
          },
          "PlaygroundLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PlaygroundLambdaVersionAWTMx0LkfqShqR2GLnd1Bt3bZFUJVg8llNHeFP97T2g"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/development"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "defaultStage": "development",
      "developmentDeletionPolicy": "Delete",
      "productionDeletionPolicy": "Retain",
      "databaseIdentifier": "server-graphql-development",
      "databaseName": "server-graphql_development",
      "lambdaProccess": "server-graphql-lambda-development",
      "webpackIncludeModules": true,
      "databasePassword": {
        "development": "WMesTAilEGRE",
        "production": "vIlEBYROgYPo"
      },
      "domainName": {
        "development": "dev-api.hariki-labs.com.br",
        "production": "origin-api.hariki-labs.com.br"
      },
      "customDomain": {
        "domainName": "dev-api.hariki-labs.com.br",
        "certificateArn": "arn:aws:acm:us-east-1:559889158711:certificate/a7495884-c60a-4010-ac56-a6ce1066432a",
        "basePath": "",
        "stage": "development",
        "createRoute53Record": true,
        "endpointType": "regional"
      },
      "prune": {
        "automatic": true,
        "number": 3
      },
      "serverless-offline": {
        "port": 4000
      }
    },
    "plugins": [
      "serverless-offline",
      "serverless-webpack",
      "serverless-prune-plugin",
      "serverless-domain-manager"
    ],
    "pluginsData": {},
    "functions": {
      "graphql": {
        "handler": "src/handler.graphqlHandler",
        "environment": {
          "databaseHost": "server-graphql-development.cjmgmvbaia9s.us-east-1.rds.amazonaws.com",
          "databaseUser": "root",
          "databasePassword": "WMesTAilEGRE",
          "databaseDb": "server-graphql_development"
        },
        "events": [
          {
            "http": {
              "path": "graphql",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "server-graphql-development-graphql",
        "package": {
          "artifact": ".serverless/server-graphql.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "playground": {
        "handler": "src/handler.playgroundHandler",
        "events": [
          {
            "http": {
              "path": "playground",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "server-graphql-development-playground",
        "package": {
          "artifact": ".serverless/server-graphql.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "Database": {
          "Type": "AWS::RDS::DBInstance",
          "Properties": {
            "AllocatedStorage": 100,
            "AutoMinorVersionUpgrade": true,
            "AvailabilityZone": "us-east-1a",
            "DBInstanceClass": "db.t3.micro",
            "DBInstanceIdentifier": "server-graphql-development",
            "DBName": "server-graphql_development",
            "Engine": "postgres",
            "EngineVersion": 10.6,
            "MasterUsername": "root",
            "MasterUserPassword": "WMesTAilEGRE",
            "PubliclyAccessible": true
          }
        }
      },
      "Outputs": {}
    },
    "layers": {}
  },
  "package": {
    "artifactDirectoryName": "serverless/server-graphql/development/1555965018467-2019-04-22T20:30:18.467Z",
    "artifact": ""
  }
}